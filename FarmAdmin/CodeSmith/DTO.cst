<%@ Template Language="C#" TargetLanguage="C#" Description="An example on creating a class with properties from a database table." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.Core.Extensions" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DataSource" Optional="False" %>

<script runat="template">
public string GetNullString(SchemaExplorer.ColumnSchema column)
{
    if (column.AllowDBNull && column.SystemType.IsValueType)
    {
        return "?";
    }
    return string.Empty;
}

private string OneToUpper(string str)
{
    str = str.Substring(0,1).ToUpper()+str.Substring(1);
	while(str.IndexOf('_')>-1) {
		str = str.Substring(0,str.IndexOf('_')) + str.Substring(str.IndexOf('_')+1,1).ToUpper() + str.Substring(str.IndexOf('_')+2);
	}
	return str;
}
</script>

using System;
using SqlSugar;
namespace Fram.Domain
{
    /// <summary>
    /// <%= SourceTable.Description%>
    /// </summary>
    [Serializable]
    [SugarTable("<%= SourceTable.Name %>")]
    public partial class DTO<%= OneToUpper(SourceTable.Name) %>
    {
    	public DTO<%= OneToUpper(SourceTable.Name) %>() 
        {
        }
        public DTO<%= OneToUpper(SourceTable.Name) %>(DTO<%= OneToUpper(SourceTable.Name) %> dto) 
        {
            <% foreach (var column in SourceTable.Columns) { %>
            this.<%= column.Name %> = dto.<%= column.Name %>;
            <% } %>
        }
        <% foreach (var column in SourceTable.Columns) { %>
        /// <summary>
        /// <%=column.Description %>
        /// </summary>
    	public <%= column.SystemType.Name %><%= GetNullString(column)%> <%= column.Name %> { get; set; }
    	<% } %>
    }
}